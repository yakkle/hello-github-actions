# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  workflow_dispatch:
    inputs:
      loopchain:
        description: 'loopchain tag'
        required: true
        default: '2.6.0'
      iconrpcserver:
        description: 'iconrpcserver tag'
        required: true
        default: '1.5.1'
      iconservice:
        description: 'iconservice tag'
        required: true
        default: '1.7.7'
      rewardcalculator:
        description: 'rewardcalculator tag'
        required: true
        default: '1.2.2'
      release_tag:
        description: 'release tag'
        required: true
        default: '2020.09'
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      RELEASE_TAG: ${{ github.event.inputs.release_tag }}
    steps:
    - name: repos
      run: |
        echo "loopchain ${{ github.event.inputs.loopchain }}!"
        echo "iconrpcserver ${{ github.event.inputs.iconrpcserver }}!"
        echo "iconservice ${{ github.event.inputs.iconservice }}!"
        echo "rewardcalculator ${{ github.event.inputs.rewardcalculator }}!"
        echo "tag : ${{ env.RELEASE_TAG }}"
        echo "github env file : $GITHUB_ENV"
        echo "LOG_PATH=https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" >> $GITHUB_ENV
    - name: Set env
      run: |
        import sys
        print("version: {}".format(sys.version))
      shell: python
    - name: checkout release
      uses: actions/checkout@v2
    - name: checkout loopchain
      uses: actions/checkout@v2
      with:
        repository: icon-project/loopchain
        ref: ${{ github.event.inputs.loopchain }}
        path: loopchain
    - name: check loopchain
      run: |
        ls -al ./ ./loopchain
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install virtualenv
        virtualenv -p python venv
        source venv/bin/activate
        pip list
        # pip install flake8 pytest
        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Set env
      run: |
        import os, sys
        print(f"version: {sys.version}")
        github_env_file = os.getenv("GITHUB_ENV")
        print(f"github env: {github_env_file!r}")

        with open(github_env_file, "r+") as f:
          print(f"({f.read()})")
          f.write("DOCKER_TAG=2020.11.25-160151")
          f.seek(0)
          print(f"({f.read()})")
      shell: python
    - name: Set env with python
      run: python -c "print('FOO=$RELEASE_TAG')" >> $GITHUB_ENV
    - name: check
      run: |
        which python
        ls -al
        pip list
        echo "FOO: ${{ env.FOO }}"
        echo "DOCKER_TAG: ${{ env.DOCKER_TAG }}"
        echo "env.LOG_PATH: ${{ env.LOG_PATH }}"
      env:
        VIRTUAL_ENV: ./venv
    - name: Test with pytest
      if: ${{ false }}
      run: |
        pytest -v
    - name: build assets
      run: |
        cp LICENSE license.txt
        tar czf 20210928.0_packages.tar.gz .github README.md
        touch citizen.txt
        tar czf citizen_pack_20210928.0.tar.gz loopchain citizen.txt
    - name: upload release asset
      uses: softprops/action-gh-release@v1
      with:
        name: Release 20210928.0
        tag_name: ${{ github.event.inputs.release_tag }}
        body_path: README.md
        files: |
          20210928.0_packages.tar.gz
          citizen_pack_20210928.0.tar.gz
          license.txt
        prerelease: true
          
