# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  workflow_dispatch:
    inputs:
      loopchain:
        description: 'loopchain tag'
        required: true
        default: '2.6.0'
      iconrpcserver:
        description: 'iconrpcserver tag'
        required: true
        default: '1.5.1'
      iconservice:
        description: 'iconservice tag'
        required: true
        default: '1.7.7'
      rewardcalculator:
        description: 'rewardcalculator tag'
        required: true
        default: '1.2.2'
      release_tag:
        description: 'release tag'
        required: true
        default: '2020.09'
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      RELEASE_TAG: ${{ github.event.inputs.release_tag }}
    steps:
    - name: repos
      run: |
        echo "loopchain ${{ github.event.inputs.loopchain }}!"
        echo "iconrpcserver ${{ github.event.inputs.iconrpcserver }}!"
        echo "iconservice ${{ github.event.inputs.iconservice }}!"
        echo "rewardcalculator ${{ github.event.inputs.rewardcalculator }}!"
        echo "tag : ${{ env.RELEASE_TAG }}"
    - name: checkout loopchain
      uses: actions/checkout@v2
      with:
        repository: icon-project/loopchain
        ref: ${{ github.event.inputs.loopchain }}
        path: loopchain
    - name: check loopchain
      run: |
        ls -al ./ ./loopchain
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install virtualenv
        virtualenv -p python venv
        source venv/bin/activate
        pip list
        # pip install flake8 pytest
        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: check
      run: |
        which python
        ls -al
        pip list
      env:
        VIRTUAL_ENV: ./venv
    - name: Test with pytest
      if: ${{ false }}
      run: |
        pytest -v
